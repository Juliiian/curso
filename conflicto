//ACLARACIÓN: El programa falla cuando ponemos un angulo que al hacerle el triple, la tangente
//no existe, por ejemplo si calculamos el sin(90)=1 y cos (90)=0, sabemos que tan=sin/cos, con lo
//cual sería 1/0 que no existe, pero si lo comprobamos con el programa, veremos que no da un error,
//eso es debido a que el cos(90) no lo calcula exactamente como 0 si no como un número muy próximo
//a 0, con lo cual al hacer la tangente nos dará un número muy grande puesto que estamos diviendo
//entre un número muy pequeño. Hay que considerar esto y saber que no es correcto.

#include <iostream>
#include <cmath>
#include <cstdlib>
#include <iomanip>
#define PI 3.14159265359

using namespace std;

int main (void)

{
    //Declaración de variables(FD=función directa, FI=función indirecta)

    short int grados;
    double FDsin, FDcos, FDtan, FIsin, FIcos, FItan, rads;

    //Pedimos al usuario que introduzca el valor del ángulo(en grados) del cual quiere saber las
    //funciones trigonométricas del ángulo triple.

 
    cout << "Introduzca el ángulo (en grados) del cual quiere saber las funciones trigonometricas del angulo triple: ";
 
    cin >> grados;

    //Transformamos el ángulo de grados a radianes, que es como se trabajan los ángulos en c++.

    rads=grados*PI/180;

    //Calculamos las funciones trigonométricas del ángulo triple.

    FDsin= sin(3*rads);
    FDcos= cos(3*rads);
    FDtan= tan(3*rads);
    FIsin= 3*sin(rads)-4*pow(sin(rads),3);
    FIcos= 4*pow(cos(rads),3)-3*cos(rads);
    FItan=(3*tan(rads)-pow(tan(rads),3))/(1-3*pow(tan(rads),2));

    //Mostramos los valores de las funciones trigonométricas del ángulo triple de la forma indirecta y directa.
    //Para emular una tabla, utilizamos los manipuladores de flujo de la biblioteca iomanip.
    //Los datos en pantalla se mostrarán con una precisión de 10 cifras significativas.


    cout <<setprecision(6)<<endl<<endl;
    //El texto de salida que se muestra en pantalla "FORMA DIRECTA" estará justificado a la izquierda. El siguiente texto
    //"FORMA INDIRECTA" estará justificado a la derecha, con una anchura de 30 y con el caracter de relleno '-'.

    cout <<left << "FORMA DIRECTA" <<right <<setw(30)<<setfill('-')<< "FORMA INDIRECTA" <<endl;
    //De forma analoga a como hemos hecho con la primera fila, lo hacemos con las demás para que quede una forma de tabla.

    cout <<left << "sin(3a)= " <<FDsin <<setw(30) <<setfill('-') <<right << "3*sin(a)-4*(sin(a)^3)= " <<FIsin <<endl;

    cout <<left << "cos(3a)= " <<FDcos <<setw(30) <<setfill('-') <<right << "4*(cos(a))^3-3*cos(a)= " <<FIcos <<endl;

    cout <<left << "tan(3a)= " <<FDtan <<setw(50) <<setfill('-') <<right << "(3*tan(a)-(tan(a)^3))/(1-3*(tan(a))^2)= " <<FItan <<endl<<endl<<endl;


    system ("pause");

    return 0;




}
